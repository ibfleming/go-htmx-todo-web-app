package templates

import (
	"fmt"
	"zion/internal/storage/db"
)

templ TodoList(todos []db.Todo) {
	<div class="flex flex-col gap-2">
		<h1 class="text-sm font-semibold text-neutral-800">todos</h1>
		<ul
			id="todos"
			class="grid-cols-[repeat(auto-fill,_minmax(256px,256px))] grid items-start gap-4"
		>
			if len(todos) == 0 {
				<li class="text-xs text-red-800">
					No todos available.
				</li>
			} else {
				for _, todo := range todos {
					@SingleTodo(todo)
				}
			}
		</ul>
	</div>
}

templ SingleTodo(todo db.Todo) {
	<li
		id={ "todo_" + fmt.Sprintf("%d", todo.ID) }
		class="min-w-[256px] w-[256px] p-2 rounded-sm border border-neutral-800 shadow-md"
	>
		<div class="flex justify-between">
			<div class="w-[80%] flex flex-col items-start">
				<h1 class="max-w-full text-sm truncate">{ todo.Title }</h1>
				<h2 class="max-w-full text-xs text-neutral-700 truncate">{ todo.Description }</h2>
			</div>
			@DeleteTodo(todo)
		</div>
		<hr class="w-full my-2 border-neutral-800"/>
		<div class="flex justify-start items-center gap-2">
			@AddTodoItem(todo)
		</div>
		<hr class="w-full my-2 border-neutral-800"/>
		<ul
			id={ "todo_items_" + fmt.Sprintf("%d", todo.ID) }
			class="flex flex-col gap-2"
		>
			if len(todo.Items) == 0 {
				<li class="text-xs text-red-800">
					No todos available.
				</li>
			} else {
				for _, item := range todo.Items {
					@SingleTodoItem(item)
				}
			}
		</ul>
	</li>
}

var strikeThroughTodoItemHandle = templ.NewOnceHandle()

templ SingleTodoItem(item db.TodoItem) {
	{{ todoItemID := "todo_" + fmt.Sprintf("%d", item.TodoID) + "_item_" + fmt.Sprintf("%d", item.ID) }}
	<li
		id={ todoItemID }
		class=""
	>
		<form>
			<div class="flex flex-row justify-between items-center gap-2">
				<div class="w-full flex flex-row justify-start items-center gap-2">
					<input
						type="checkbox"
						name="completed"
						value="true"
						if item.Completed {
							checked
						}
						class="form-checkbox text-green-700 cursor-pointer focus:outline-none focus:ring-0"
						onclick="toggleLineThrough(this)"
					/>
					<input
						id={ "desc_" + fmt.Sprintf("%d", item.ID) }
						type="text"
						name="description"
						placeholder="type the todo..."
						value={ item.Description }
						class={ "form-input w-full p-0 text-xs truncate border-none", templ.KV("line-through", item.Completed) }
					/>
				</div>
				<div class="flex flex-col justify-end items-center gap-1">
					@SaveTodoItem()
					@DeleteTodoItem(item, todoItemID)
				</div>
			</div>
		</form>
	</li>
	@strikeThroughTodoItemHandle.Once() {
		<script type="text/javascript">
			function toggleLineThrough(checkbox) {
				const descInput = document.getElementById("desc_" + checkbox.closest("li").id.split("_")[3]);
				if (checkbox.checked) {
					descInput.classList.add("line-through");
				} else {
					descInput.classList.remove("line-through");
				}
			}
		</script>
	}
}

templ AddTodoItem(todo db.Todo) {
	<button
		hx-post={ "/todo/" + fmt.Sprintf("%d", todo.ID) + "/item/create" }
		hx-target={ "#todo_items_" + fmt.Sprintf("%d", todo.ID) + " li:last-child" }
		hx-swap="afterend"
		aria-label="Add Todo Item"
		class="flex justify-start items-center gap-2 focus:outline-none"
	>
		<svg class="min-w-5 w-5 h-5 text-white bg-green-700 rounded shadow-sm" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
			<g id="SVGRepo_bgCarrier" stroke-width="0"></g>
			<g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g>
			<g id="SVGRepo_iconCarrier">
				<path
					d="M6 12H18M12 6V18"
					stroke="currentColor"
					stroke-width="2"
					stroke-linecap="round"
					stroke-linejoin="round"
				></path>
			</g>
		</svg>
		<h3 class="w-full text-xs text-green-700 truncate">add a todo item</h3>
		<span class="sr-only">Add Todo Item</span>
	</button>
}

templ DeleteTodo(todo db.Todo) {
	<button
		hx-delete={ "/todo/" + fmt.Sprintf("%d", todo.ID) }
		hx-target={ "#todo_" + fmt.Sprintf("%d", todo.ID) }
		hx-swap="outerHTML"
		aria-label="Delete Todo"
		class="w-6 h-6 text-white bg-red-800 rounded shadow-sm focus:outline-none"
	>
		<svg class="text-white" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
			<g id="SVGRepo_bgCarrier" stroke-width="0"></g>
			<g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g>
			<g id="SVGRepo_iconCarrier">
				<g id="Menu / Close_MD">
					<path
						id="Vector"
						d="M18 18L12 12M12 12L6 6M12 12L18 6M12 12L6 18"
						stroke="currentColor"
						stroke-width="1"
						stroke-linecap="round"
						stroke-linejoin="round"
					></path>
				</g>
			</g>
		</svg>
		<span class="sr-only">Delete Todo</span>
	</button>
}

templ SaveTodoItem() {
	<button
		type="submit"
		aria-label="Save Todo Item"
		class="w-5 h-5 text-white bg-yellow-500 rounded shadow-sm focus:outline-none"
	>
		<svg
			viewBox="0 0 64 64"
			xmlns="http://www.w3.org/2000/svg"
			stroke-width="3"
			stroke="currentColor"
			fill="none"
		>
			<g id="SVGRepo_bgCarrier" stroke-width="0"></g>
			<g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g>
			<g id="SVGRepo_iconCarrier">
				<path
					d="M51,53.48H10.52V13A2.48,2.48,0,0,1,13,10.52H46.07l7.41,6.4V51A2.48,2.48,0,0,1,51,53.48Z"
					stroke-linecap="round"
				></path>
				<rect
					x="21.5"
					y="10.52"
					width="21.01"
					height="15.5"
					stroke-linecap="round"
				></rect>
				<rect
					x="17.86"
					y="36.46"
					width="28.28"
					height="17.02"
					stroke-linecap="round"
				></rect>
			</g>
		</svg>
		<span class="sr-only">Save Todo Item</span>
	</button>
}

templ DeleteTodoItem(item db.TodoItem, targetId string) {
	<button
		hx-delete={ "/todo/" + fmt.Sprintf("%d", item.TodoID) + "/item/" + fmt.Sprintf("%d", item.ID) }
		hx-target={ "#" + targetId }
		hx-swap="outerHTML"
		aria-label="Delete Todo Item"
		class="w-5 h-5 text-white bg-red-800 rounded shadow-sm focus:outline-none"
	>
		<svg class="text-white" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
			<g id="SVGRepo_bgCarrier" stroke-width="0"></g>
			<g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g>
			<g id="SVGRepo_iconCarrier">
				<g id="Menu / Close_MD">
					<path
						id="Vector"
						d="M18 18L12 12M12 12L6 6M12 12L18 6M12 12L6 18"
						stroke="currentColor"
						stroke-width="1"
						stroke-linecap="round"
						stroke-linejoin="round"
					></path>
				</g>
			</g>
		</svg>
		<span class="sr-only">Delete Todo Item</span>
	</button>
}

templ EmptyTodoItems() {
	<li class="text-xs text-red-800">
		No todos available.
	</li>
}
